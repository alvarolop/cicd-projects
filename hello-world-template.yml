apiVersion: v1
kind: Template
metadata:
  name: hello-world
  annotations:
    description: Template for hello-world
    tags: app,java,springboot
    iconClass: icon-rh-openjdk
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
labels:
  template: hello-world
  app: hello-world
objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/alvarolop/hello-world.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: java:latest
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    failedBuildsHistoryLimit: 5
    triggers:
    - type: ConfigChange
    - imageChange:
        lastTriggeredImageID: docker-registry.default.svc:5000/openshift/java@sha256:caba895933209aa9a4f3121f9ec8e5e8013398ab4f72bd3ff255227aad8d2c3e
      type: ImageChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - name: ${APPLICATION_NAME}
          image: docker-registry.default.svc:5000/${APPLICATION_NAMESPACE}/${APPLICATION_NAME}
          imagePullPolicy: Always
          name: hello-world
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
          # env:
          # - name: TEST_SECRET_USERNAME_ENV_VAR
          #   valueFrom:
          #     secretKeyRef:
          #       name: test-secret
          #       key: username
        #   volumeMounts:
        #     - name: ${APPLICATION_NAME}-config
        #       mountPath: "/deployments/config/"
        # volumes:
        # - name: ${APPLICATION_NAME}-config
        #   configMap:
        #     name: ${APPLICATION_NAME}-file-config
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
parameters:
- name: APPLICATION_NAME
  description: "The name for the application."
  required: true
- name: APPLICATION_NAMESPACE
  description: "The namespace of the application."
  required: true
  value: workshop-project